# Development Docker image for envsense
# Based on Ubuntu with mise for tool management
FROM ubuntu:22.04

# Avoid interactive prompts during package installation
ARG DEBIAN_FRONTEND=noninteractive

# Install system dependencies
RUN apt-get update && apt-get install -y \
    curl \
    git \
    build-essential \
    pkg-config \
    libssl-dev \
    ca-certificates \
    sudo \
    bash \
    fish \
    && rm -rf /var/lib/apt/lists/*

# Create a non-root user for development
ARG USERNAME=dev
ARG USER_UID=1000
ARG USER_GID=$USER_UID

RUN groupadd --gid $USER_GID $USERNAME \
    && useradd --uid $USER_UID --gid $USER_GID -m $USERNAME \
    && echo $USERNAME ALL=\(root\) NOPASSWD:ALL > /etc/sudoers.d/$USERNAME \
    && chmod 0440 /etc/sudoers.d/$USERNAME

# Switch to the dev user
USER $USERNAME
WORKDIR /home/$USERNAME

# Install mise
RUN curl https://mise.run | sh

# Add mise to PATH for all shells
ENV PATH="/home/$USERNAME/.local/bin:$PATH"

# Copy mise configuration
COPY --chown=$USERNAME:$USERNAME mise.toml /home/$USERNAME/workspace/envsense/

# Set up workspace directory
RUN mkdir -p /home/$USERNAME/workspace/envsense
WORKDIR /home/$USERNAME/workspace/envsense

# Trust mise config and install tools
RUN ~/.local/bin/mise trust && \
    ~/.local/bin/mise install

# Set up shell environment
RUN echo 'eval "$(~/.local/bin/mise activate bash)"' >> ~/.bashrc

# Add mise and Rust tools to PATH  
ENV PATH="/home/$USERNAME/.local/bin:/home/$USERNAME/.cargo/bin:$PATH"

# Note: Cross-compilation tools removed for simplicity - use CI for multi-arch builds

# Set up shell environment for fish
RUN mkdir -p ~/.config/fish && echo 'eval "$(~/.local/bin/mise activate fish)"' >> ~/.config/fish/config.fish

# Note: Docker and cross-compilation environment variables removed

# Default command
CMD ["/bin/bash"]
